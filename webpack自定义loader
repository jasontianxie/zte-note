loader和plugin的区别
loader 用于加载某些资源文件。 因为webpack 本身只能打包commonjs规范的js文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。

plugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。当然loader也时变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。而plugin的功能更加的丰富，而不仅局限于资源的加载。

个人理解：就是loader专注于细节，plugin专注于总体。


如何写一个loader呢？http://www.cnblogs.com/zhaohongtian/p/6801322.html
loader就是一个函数，它可以接收两个参数，第一个参数是即将被转化的文件的内容，第二个参数是sourcemap（可选，是json格式的map），用于调试https://webpack.js.org/api/loaders/

那么原理就很简单了，一句话就是给loader传入文件，然后对文件进行处理，最后输出结果文件。
比如说babel-loader，就是传入es6文件，然后在loader中对es6文件进行处理，转化成es5，然后输出

